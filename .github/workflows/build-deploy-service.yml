name: Build service

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string
      service_name:
        required: true
        type: string
      organization:
        required: true
        type: string
    secrets:
      aws_account_id:
        required: true

jobs:

  build:

    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ inputs.environment }}-github
          role-session-name: ${{ inputs.environment }}-github
          aws-region: ${{ inputs.aws_region }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build server
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.environment }}-${{ inputs.service_name }}:${{ github.sha }}
          context: .
          file: ./apps/${{ inputs.service_name }}/Dockerfile
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ inputs.organization }}/${{ inputs.service_name }}:prod-cache
          cache-to: type=registry,ref=ghcr.io/${{ inputs.organization }}/${{ inputs.service_name }}:prod-cache,mode=max

  deploy:

    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read
      packages: write

    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download service task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.environment }}-${{ inputs.service_name }} \
          --query taskDefinition --output json | jq -r 'del(
            .taskDefinitionArn,
            .requiresAttributes,
            .compatibilities,
            .revision,
            .status,
            .registeredAt,
            .registeredBy
          )' > task-def.json

      - run: echo "version=$(cat task-def.json)" >> $GITHUB_OUTPUT

      - name: Update Amazon ECS task definition for service
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: infrastructure/environments/prod/task-def.json
          container-name: ${{ inputs.environment }}-${{ inputs.service_name }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.environment }}-${{ inputs.service_name }}:${{ github.sha }}

      - name: Deploy Amazon ECS backend service with new service task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ inputs.environment }}-${{ inputs.service_name }}
          cluster: ${{ inputs.environment }}-${{ inputs.organization }}
          wait-for-service-stability: true
